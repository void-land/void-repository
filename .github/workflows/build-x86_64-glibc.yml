name: "Build Void Packages x86_64 Glibc"

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REPO_OWNER: "${{ github.repository_owner }}"
  REPO_NAME: "${{ github.event.repository.name }}"
  PACKAGES_FILE: "packages.tar.gz"

jobs:
  build:
    name: Build Void Packages
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/void-linux/void-buildroot-${{ matrix.config.libc }}:20240526R1
      options: --platform ${{ matrix.config.platform }}
      env:
        PATH: "/usr/libexec/chroot-git:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/sbin:/usr/local/bin:/tmp/bin"
        ARCH: "${{ matrix.config.arch }}"
        BOOTSTRAP: "${{ matrix.config.host }}"
        TEST: "${{ matrix.config.test }}"
        HOSTREPO: /hostrepo

    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              arch: x86_64,
              host: x86_64,
              libc: glibc,
              platform: linux/amd64,
              test: 1,
            }

    steps:
      - name: Prepare container
        run: |
          mkdir -p /etc/xbps.d && cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
          ls -la
          sed -i 's|repo-default|repo-ci|g' /etc/xbps.d/*-repository-*.conf
          xbps-install -Syu || xbps-install -yu xbps
          xbps-install -y tar curl openssl openssh

      - name: Clone Void-Packages and prepare
        run: |
          cd ~
          git clone --depth 1 https://github.com/void-linux/void-packages.git

      - name: Clone Hyprland-Void repo and prepare
        run: |
          git clone https://github.com/${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}.git
          cd ${{ env.REPO_NAME }}
          cp -r srcpkgs/* ~/void-packages/srcpkgs

      - name: Create hostrepo and prepare masterdir
        run: |
          cd ~/void-packages
          ln -s "$(pwd)" /hostrepo &&
          common/travis/set_mirror.sh &&
          common/travis/prepare.sh &&
          common/travis/fetch-xtools.sh

      - name: Build SingBox Geoip
        run: |
          (/hostrepo/xbps-src -j$(nproc) -s -H ~/hostdir pkg sing-geosite)

      # - name: Build Chrome
      #   run: |
      #     sed -i '/^repository=nonfree/d' /hostrepo/srcpkgs/google-chrome/template
      #     (/hostrepo/xbps-src -j$(nproc) -s -H ~/hostdir pkg google-chrome)

      # - name: Build Hiddify Next
      #   run: |
      #     (/hostrepo/xbps-src -j$(nproc) -s -H ~/hostdir pkg hiddify-next)

      # - name: Build Swayosd
      #   run: |
      #     (/hostrepo/xbps-src -j$(nproc) -s -H ~/hostdir pkg swayosd)

      # - name: Build Fastfetch
      #   run: |
      #     (/hostrepo/xbps-src -j$(nproc) -s -H ~/hostdir pkg fastfetch)

      - name: List Packages
        run: |
          ls -la ~/hostdir/binpkgs

      - name: Generate Private Pem
        run: |
          cd ~
          ssh-keygen -t rsa -b 4096 -m PEM -f privkey.pem -N ''
          ls -la

      - name: Sign repository
        run: |
          xbps-rindex --privkey ~/privkey.pem --sign --signedby "${{ env.REPO_NAME }}-github-action" ~/hostdir/binpkgs
          xbps-rindex --privkey ~/privkey.pem --sign-pkg ~/hostdir/binpkgs/*.xbps

      - name: Compress Packages
        run: |
          cd ~/hostdir/binpkgs
          tar -czvf ${{ env.PACKAGES_FILE }} *
          ls -la

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.REPO_NAME }}
          path: ~/hostdir/binpkgs/${{ env.PACKAGES_FILE }}

  publish:
    name: Pack and Publish
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.REPO_NAME }}
          path: ~/

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update or Create Repository Branch
        run: |
          if git ls-remote --exit-code --heads origin repository-x86_64-glibc; then
            echo "Branch exists, deleting it"
            git push origin -d repository-x86_64-glibc
          else
            echo "Branch does not exist, will create new"
          fi
          git switch --orphan repository-x86_64-glibc

      - name: Extract and Add Packages
        run: |
          tar -xvf ~/${{ env.PACKAGES_FILE }} -C ./

      - name: Commit and Push Changes
        run: |
          git add -A
          git commit -m "Upload latest packages to repository"
          git push origin repository-x86_64-glibc
