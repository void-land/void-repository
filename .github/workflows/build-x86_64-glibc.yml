name: "Build Void Packages x86_64 Glibc"

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REPO_OWNER: "${{ github.repository_owner }}"
  REPO_NAME: "${{ github.event.repository.name }}"
  PKGS_FILE: "pkgs.tar.gz"

jobs:
  build:
    name: Build Void Packages
    runs-on: ubuntu-latest

    container:
      image: ghcr.io/void-linux/void-buildroot-${{ matrix.config.libc }}:20231230R1
      options: --platform ${{ matrix.config.platform }}
      env:
        PATH: "/usr/libexec/chroot-git:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/sbin:/usr/local/bin:/tmp/bin"
        ARCH: "${{ matrix.config.arch }}"
        BOOTSTRAP: "${{ matrix.config.host }}"
        TEST: "${{ matrix.config.test }}"
        HOSTREPO: /hostrepo

    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              arch: x86_64,
              host: x86_64,
              libc: glibc,
              platform: linux/amd64,
              test: 1,
            }

    steps:
      - name: Prepare container
        run: |
          mkdir -p /etc/xbps.d && cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
          ls -la
          sed -i 's|repo-default|repo-ci|g' /etc/xbps.d/*-repository-*.conf
          xbps-install -Syu xbps
          xbps-install -Syu
          xbps-install -y tar curl openssl openssh

      - name: Clone Void-Packages and prepare
        run: |
          git clone --depth 1 https://github.com/void-linux/void-packages.git
          ls -la

      - name: Create hostrepo and prepare masterdir
        run: |
          cd void-packages
          ln -s "$(pwd)" /hostrepo &&
          common/travis/set_mirror.sh &&
          common/travis/prepare.sh &&
          common/travis/fetch-xtools.sh

      # Build Packages :

      - name: Build Chrome
        run: |
          sed -i '/^repository=nonfree/d' /hostrepo/srcpkgs/google-chrome/template
          (/hostrepo/xbps-src -j$(nproc) -s -H ~/hostdir pkg google-chrome)

      - name: List Packages
        run: |
          ls -la ~/hostdir/binpkgs/

      - name: Get Private Pem
        run: |
          cd ~
          curl -O https://raw.githubusercontent.com/void-land/void-repository/main/pem/privkey.pem
          ls -la

      - name: Sign repository
        run: |
          export XBPS_PASSPHRASE=${{ secrets.PRIVATE_PEM_PASSPHRASE }}
          xbps-rindex --privkey ~/private.pem --sign --signedby "${{ env.REPO_NAME }}-github-action" ~/hostdir/binpkgs/
          xbps-rindex --privkey ~/private.pem --sign-pkg ~/hostdir/binpkgs/*.xbps

      - name: Compress Packages
        run: |
          cd ~/hostdir/binpkgs
          tar -czvf ${{ env.PKGS_FILE }} *
          ls -la

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.REPO_NAME }}
          path: ~/hostdir/binpkgs/${{ env.PKGS_FILE }}

  publish:
    name: Pack and Publish
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.REPO_NAME }}
          path: ~/

      - name: Get current date
        run: echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Config git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Extract Pkg File
        run: |
          tar -xvf ~/${{ env.PKGS_FILE }} -C ./

      - name: Delete old repository and Recreate with new packages
        run: |
          git lfs install
          git lfs track "*.xbps"
          git push origin -d repository-x86_64-glibc
          git switch --orphan repository-x86_64-glibc
          git add .
          git commit -m "upload: latest packages to repository"
          git push origin repository-x86_64-glibc
